name: Build and Publish Wheels

on:
  release:
    types: [published]

jobs:
  build_wheel_multiplatform:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt
          python -m pip install -r requirements_dev.txt

      - name: Build extensions in place
        run: |
          python -m pip install setuptools wheel
          python setup.py build_ext --inplace

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.19.2
      
      - name: Build wheels
        run: python -m cibuildwheel --output-dir dist
      
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./dist/*.whl

  publish_wheels:
    needs: [build_wheel_multiplatform]
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels-ubuntu-latest
          path: ./dist

      - name: Download Windows wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels-windows-latest
          path: ./dist

      - name: Download MacOS 13 wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels-macos-13
          path: ./dist

      - name: Download MacOS 14 wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels-macos-14
          path: ./dist

      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          python3 -m pip install twine
          twine upload dist/*.whl
