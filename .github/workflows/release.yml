name: Build

on:
  release:
    types: [created]
    
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [windows-latest, ubuntu-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.2
        with:
          package-dir: .
          output-dir: dist
          config-file: "./pyproject.toml"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./dist/*.whl
          retention-days: 5

  download:
      runs-on: ubuntu-latest
      needs: build_wheels

      steps:
        - uses: actions/download-artifact@v4
          with:
            # unpacks all CIBW artifacts into dist/
            pattern: cibw-*
            path: dist
            merge-multiple: true
  
  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: download

    steps:
      - uses: actions/checkout@v4

      - name: Download built wheels
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"  # Use appropriate Python version

      - name: Install Twine
        run: python -m pip install --upgrade twine

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: python -m twine upload dist/*